@model The_Post.Models.VM.AdminDashboardVM
@{
    ViewData["Title"] = "Index";
    Layout = "_LayoutForAdmin";
}

<div class="container-fluid py-3 px-4">
    <h1 class="mb-4"><em><strong>Admin Dashboard</strong></em</h1>
    <hr />
    <div class="row g-3">
        <!-- Statistics Cards -->
        <div class="col-md-3">
            <div class="card shadow-sm rounded-4 ratio ratio-16x9">
                <div class="card-body">
                    <p class="card-title"><strong>@Model.TotalArticles</strong></p> 
                    <h5 class="card-text"><strong>Total Articles</strong></h5>
                    <i class="fa-solid fa-newspaper"></i>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card shadow-sm rounded-4 ratio ratio-16x9">
                <div class="card-body p-2">            
                    <div class="position-relative h-100">
                        <p class="card-title position-absolute top-0 start-0 ms-3 display-5 fw-bold">@Model.TotalArticles</p>           
                        <h5 class="card-text position-absolute bottom-0 start-0 ms-3 mb-4"><strong>Total Articles</strong></h5>            
                        <i class="fa-solid fa-newspaper position-absolute bottom-0 end-0 m-2 pe-2 display-1"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Most Liked Article</h5>
                    <div class="ratio ratio-16x9 img-thumbnail" style="max-height: 200px; max-width: 300px;">
                        <img src="@Model.MostLikedImage" class="card-img-top" alt="No Article Image" >
                    </div>
                    <h5 class="card-text">@Model.MostLikedArticle</h5>
                    <p class="card-text small">Likes: @Model.MostLikedArticleLikes</p>
                </div>
            </div>            
        </div>
        <div class="col-md-3">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Total Employees</h5>
                    <p class="card-text display-6">@Model.TotalEmployees</p>
                    <br />
                    <p class="card-text display-6">Admins: @Model.TotalAdmin</p>
                    <p class="card-text display-6">Editors: @Model.TotalEditors</p>
                    <p class="card-text display-6">Writers: @Model.TotalWriters</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Total Users</h5>
                    <p class="card-text display-6">@Model.TotalUsers</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Active Subscriptions</h5>
                    <p class="card-text display-6">@Model.ActiveSubscriptions</p>
                </div>
            </div>
        </div>
        
    </div>

    <!-- Recent Activity -->
    @* <div class="mt-4">
        <h4>Recent Activity</h4>
        <ul class="list-group">
            @foreach (var activity in Model.RecentActivities)
            {
                <li class="list-group-item">@activity</li>
            }
        </ul>
    </div> *@

    <!-- Chart Section -->
    <div class="mt-4">
        <h4>Subscription Trends</h4>
        <canvas id="subscriptionBarChart"></canvas>
    </div>
</div>


<script>
    // Wait for the DOM to be loaded
    document.addEventListener("DOMContentLoaded", async function () {

        // ----- Bar Chart -----

        var ctx = document.getElementById('subscriptionBarChart').getContext('2d'); // Get the canvas element and the rendering context type

        // Create a new chart
        var subscriptionBarChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Total', 'Active', 'Expired'], // Labels for the X axis
                datasets: [{
                    label: 'Subscriptions',
                    data: [@Model.TotalSubscribers, @Model.ActiveSubscriptions, @Model.ExpiredSubscriptions], // Data values
                    backgroundColor: ['#284ba7', '#28a745', '#dc3545'], // Colors for the bars
                    borderColor: ['#284ba7','#28a745', '#dc3545'], // Border colors for the bars
                    borderWidth: 1, // Border width for the bars
                    barPercentage: 0.3, // Bar will occupy 60% of the category width
                    categoryPercentage: 0.8 // Category will occupy 80% of the available width
                }]
            },
            options: { // Chart configuration options
                responsive: false, 
                plugins: {
                    legend: {
                        position: false, 
                    },
                    tooltip: {
                        enabled: false 
                    }
                },
                scales: { // Scales for the chart
                    x: {
                        beginAtZero: true // Start the X axis at zero
                    },
                    y: {
                        beginAtZero: true  // Start the Y axis at zero
                    }
                }
            }
        });
    });
</script>

